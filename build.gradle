// stormpath tenant: lovely-weaver
buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        flatDir {
            dirs 'lib'
        }

        mavenLocal()
        mavenCentral()
        maven { url "https://repo.grails.org/grails/core" }

        // for installing local
        maven { url "${System.getProperty('user.home')}/.m2/repository" }
    }
    dependencies {
        classpath group: 'org.codehaus.gpars', name: 'gpars', version: '1.2.1'
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"

        // for installing local
        classpath 'org.grails.plugins:api-framework:0.9.3'
    }
}


plugins {
    id "io.spring.dependency-management" version "0.6.0.RELEASE"
    //id "com.jfrog.bintray" version "1.7.3"
}

version "0.1"
group "@grails.app.group@"

apply plugin: "org.springframework.boot"
apply plugin: "org.grails.grails-web"


//apply plugin: "org.grails.grails-gsp"

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    //maven { url "${System.getProperty('user.home')}/.m2/repository/" }
    //maven { url "http://maven.it.su.se/it.su.se/maven2/" }
}

//dependencyManagement {
//    imports {
//        mavenBom "org.grails:grails-bom:$grailsVersion"
//    }
//    applyMavenExclusions false
//}

bootRun {
    systemProperties = System.properties
}

test {
    systemProperties = System.properties
}



dependencies {
    compile 'org.grails.plugins:api-framework:0.9.3'

    // compile "org.grails:grails-core"
    // compile "org.grails:grails-web-boot"
    compile 'org.grails.plugins:cache:4.0.0'
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:events"

    // test
    profile "org.grails.profiles:web"
    runtime "org.apache.tomcat:tomcat-jdbc"

    provided 'org.codehaus.gpars:gpars:1.2.1', {
        exclude group:'org.multiverse', module:'multiverse-core'
        exclude group:'org.codehaus.groovy', module: 'groovy-all'
    }

    compile "org.grails:grails-logging"
    //compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"

    //compile group: 'org.scribe', name: 'scribe', version: '1.3.7'
    //compile(name:'api-framework', version:'0.2.1.2')
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"

    //compile('org.grails:grails-dependencies'){
    //    //exclude(module:'grails-plugin-rest')
    //    exclude(module:'grails-bootstrap')
    //    exclude(module:'grails-plugin-gsp')
    //}

    compile('org.grails:grails-web') {
        exclude(module: 'org.grails:grails-web-jsp')
        exclude(module: 'org.grails:grails-web-sitemesh')
        exclude(module:'org.grails:grails-web-gsp')
    }

    provided "org.grails.plugins:hibernate5"
    provided "org.hibernate:hibernate-core:5.1.5.Final"
    provided "org.hibernate:hibernate-ehcache:5.1.5.Final"
    //provided 'org.grails.plugins:hibernate:4.3.10.6'
    //provided "org.hibernate:hibernate-ehcache"
    runtime 'mysql:mysql-connector-java:5.1.29'

    testCompile('org.codehaus.groovy.modules.http-builder:http-builder:0.7.1') {
        exclude module: "commons-logging"
        exclude module: "xml-apis"
        exclude module: "groovy"
    }

    provided 'org.springframework.boot:spring-boot-starter-tomcat'

    provided("org.codehaus.groovy:groovy-ant:${groovyVersion}")

    provided('org.grails.plugins:spring-security-core:3.2.0.M1')
    compile('org.grails.plugins:spring-security-rest:2.0.0.M2')
    compile('org.grails.plugins:spring-security-rest-gorm:2.0.0.M2'){
        exclude module: 'org.grails.plugins:spring-security-rest:2.0.0.M2'
    }

    provided 'org.grails.plugins:converters:3.3.1'
    compile "org.grails.plugins:async"
    compile "org.grails:grails-plugin-rest"

    //compile 'org.grails.plugins:db-reverse-engineer:4.0.0'

    testCompile "org.grails.plugins:geb"
    //testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails:grails-test-mixins:3.3.0"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

    //testCompile "org.grails:grails-datastore-rest-client:4.0.4.RELEASE"
    console "org.grails:grails-console"
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}




