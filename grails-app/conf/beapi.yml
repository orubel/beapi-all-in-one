---
grails:
    profile: web-plugin
    codegen:
        defaultPackage: grails.api.framework
info:
    app:
        name: '@info.app.name@'
        version: 0.1
        grailsVersion: '@info.app.grailsVersion@'
spring:
    groovy:
        template:
            check-template-location: false

---
grails:
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            all: '*/*'
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            form: application/x-www-form-urlencoded
            html:
              - text/html
              - application/xhtml+xml
            js: text/javascript
            json:
              - application/json
              - text/json
            multipartForm: multipart/form-data
            rss: application/rss+xml
            text: text/plain
            hal:
              - application/hal+json
              - application/hal+xml
            xml:
              - text/xml
              - application/xml
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
    converters:
        encoding: UTF-8
    views:
        default:
            codec: html
        gsp:
            encoding: UTF-8
            htmlcodec: xml
            codecs:
                expression: html
                scriptlets: html
                taglib: none
                staticparts: none
    tomcat:
        jvmArgs:
            -'-Xms1024m'
            -'-Xmx2048m'
            -'-XX:MaxPermSize=128m'
            -'-XX:ParallelGCThreads=2'
            -'-XX:+CMSClassUnloadingEnabled'
            -'-XX:+UseConcMarkSweepGC'
            -'-XX:+CMSIncrementalMode'
            -'-XX:+CMSIncrementalPacing'
            -'-XX:CMSIncrementalDutyCycle=10'
            -'-XX:+UseParNewGC'
            -'-XX:MaxGCPauseMillis=50'
            -'-XX:MaxGCMinorPauseMillis=50'
            -'-server'
hibernate:
    flush:
        mode: COMMIT
    cache:
        use_second_level_cache: true
        use_query_cache: true
        provider_class: 'org.hibernate.cache.EhCacheProvider'
        region.factory_class: 'org.hibernate.cache.ehcache.EhCacheRegionFactory'

quartz:
    autoStartup: true

environments:
    development:
        server:
            context-path: ''
            port: 8080
        grails:
            serverURL: "http://test.nosegrind.net"
    production:
        server:
            context-path: ''
            port: 8080
        grails:
            serverURL: "http://test.nosegrind.net"

---
environments:
    development:
        apiThrottle: false
        iostate:
            preloadDir: '.bottledwind/.iostate'
            archInstanceUrls:
                proxy: "127.0.0.1"
                mq: "127.0.0.1"
        dataSource:
            pooled: true
            jmxExport: true
            driverClassName: "org.h2.Driver"
            username: "sa"
            password: ""
            dbCreate: "create-drop"
            url: "jdbc:h2:mem:bw"
            # dbCreate: update
            properties:
                   jmxEnabled: true
                   initialSize: 5
                   maxActive: 50
                   minIdle: 5
                   maxIdle: 25
                   maxWait: 10000
                   maxAge: 600000
                   timeBetweenEvictionRunsMillis: 5000
                   minEvictableIdleTimeMillis: 60000
                   validationQuery: "SELECT 1"
                   validationQueryTimeout: 3
                   validationInterval: 15000
                   testOnBorrow: true
                   testWhileIdle: true
                   testOnReturn: false
                   jdbcInterceptors: "ConnectionState"
                   defaultTransactionIsolation: 2 # "java.sql.Connection.TRANSACTION_READ_COMMITTED"
---
apitoolkit:
    apiName: api
    attempts: 5
    roles: ['ROLE_USER','ROLE_ROOT','ROLE_ADMIN','ROLE_ARCH']
    apichain:
        limit: 3
    rest:
        postcrement: false
    chaining:
        enabled: true
    batching:
        enabled: true
    encoding: UTF-8
    throttle:
        rateLimit: {'ROLE_USER':1000,'ROLE_ADMIN':10000}
        dataLimit: {'ROLE_USER':1000000,'ROLE_ADMIN':1000000}
        # in seconds : 3600 = 60 minutes
        expires: 3600
    user:
        roles: ['ROLE_USER']
    admin:
        roles: ['ROLE_ROOT','ROLE_ADMIN','ROLE_ARCH']
    serverType: master
    webhook:
        services: ['iostate']
    corsInterceptor:
        includeEnvironments: ['development','test']
        excludeEnvironments: ['production']
        allowedOrigins: ['localhost:3000']

---
server:
    tomcat:
        backgroundProcessorDelay: 30
        maxThreads: 350
        uriEncoding: UTF-8
        compression: off
        compressableMimeTypes: application/json,text/json,application/xml,text/xml,text/plain
    use-forward-headers: true
    port: 8443                                  # The port to listen on
    ssl:
        enabled: false                           # Activate HTTPS mode on the server port
        key-store: /home/owenrubel/.keys/keystore.jks         # e.g. /etc/tomcat7/keystore/tomcat.keystore
        key-store-password: GINMAKESAMANMEAN      # e.g. changeit
        key-alias: selfsigned                   # e.g. tomcat
        key-password: BOOZEUPANDRIOT

---
root:
    login: admin
    password: Al1c3Inj@1L
    email: owenr@uw.edu
perf:
    url: 'http://perf-scidmz-data.cac.washington.edu/esmond/perfsonar/archive/?format=json&limit=100000000'






